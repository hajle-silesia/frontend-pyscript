name: CI

on:
  push:
    branches:
      [ master ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.5"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit pytest coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with bandit
        run: bandit -r .
#      - name: Unit tests with pytest
#        run: coverage run --source=src/ -m pytest
#      - name: Code test coverage with coverage
#        run: coverage report -m

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          path: app

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Set Docker image name and tag
        run: |
          cd app
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          cd ..
          echo DOCKER_REPOSITORY=mtweeman/${GITHUB_REPOSITORY////_} >> $GITHUB_ENV
          echo IMAGE_TAG=$(date -u +"%Y-%m-%dt%H-%M-%Sz")-$GITHUB_REF_NAME-$GIT_HASH >> $GITHUB_ENV
      - name: Build the Docker image
        run: docker build ./app --file ./app/Dockerfile --tag ${{ env.DOCKER_REPOSITORY }}:${{ env.IMAGE_TAG }}
      - name: Publish the Docker image
        run: docker push ${{ env.DOCKER_REPOSITORY }}:${{ env.IMAGE_TAG }}
      - name: Checkout config repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}-config
          path: config
      - name: Update K8s manifest
        run: |
          sed -i 's/tag: [[:print:]]*/tag: ${{ env.IMAGE_TAG }}/' ./config/helm/values.yaml
          cat ./config/helm/values.yaml
      - name: Push K8s manifest
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.PUSH_TOKEN }}
        with:
          source_file: ./config/helm/values.yaml
          destination_repo: ${{ github.repository }}-config
          destination_folder: helm
          user_email: mtweeman@gmail.com
          user_name: mtweeman
          destination_branch: master
          commit_message: Updated image tag
